# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dockerInfo.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10\x64ockerInfo.proto\"\"\n\x11\x44ockerInfoRequest\x12\r\n\x05value\x18\x01 \x01(\t\"#\n\x12\x44ockerInfoResponse\x12\r\n\x05value\x18\x01 \x01(\t2\x81\x01\n\nDockerInfo\x12\x37\n\nDockerInfo\x12\x12.DockerInfoRequest\x1a\x13.DockerInfoResponse\"\x00\x12:\n\rExecuteUpdate\x12\x12.DockerInfoRequest\x1a\x13.DockerInfoResponse\"\x00\x62\x06proto3')



_DOCKERINFOREQUEST = DESCRIPTOR.message_types_by_name['DockerInfoRequest']
_DOCKERINFORESPONSE = DESCRIPTOR.message_types_by_name['DockerInfoResponse']
DockerInfoRequest = _reflection.GeneratedProtocolMessageType('DockerInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _DOCKERINFOREQUEST,
  '__module__' : 'dockerInfo_pb2'
  # @@protoc_insertion_point(class_scope:DockerInfoRequest)
  })
_sym_db.RegisterMessage(DockerInfoRequest)

DockerInfoResponse = _reflection.GeneratedProtocolMessageType('DockerInfoResponse', (_message.Message,), {
  'DESCRIPTOR' : _DOCKERINFORESPONSE,
  '__module__' : 'dockerInfo_pb2'
  # @@protoc_insertion_point(class_scope:DockerInfoResponse)
  })
_sym_db.RegisterMessage(DockerInfoResponse)

_DOCKERINFO = DESCRIPTOR.services_by_name['DockerInfo']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DOCKERINFOREQUEST._serialized_start=20
  _DOCKERINFOREQUEST._serialized_end=54
  _DOCKERINFORESPONSE._serialized_start=56
  _DOCKERINFORESPONSE._serialized_end=91
  _DOCKERINFO._serialized_start=94
  _DOCKERINFO._serialized_end=223
# @@protoc_insertion_point(module_scope)
